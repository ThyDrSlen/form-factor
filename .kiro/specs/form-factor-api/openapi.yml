openapi: 3.1.0
info:
  title: Form Factor API
  version: 0.1.0
  description: REST API for workout session management, exercise set logging, and AI-powered form analysis
  contact:
    name: Form Factor API Support
    url: https://formfactor.app/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.formfactor.app/v1
    description: Production server
  - url: https://staging-api.formfactor.app/v1
    description: Staging server
  - url: http://localhost:3000/v1
    description: Development server

security:
  - bearerAuth: []

paths:
  /sessions:
    post:
      summary: Create a workout session
      description: Creates a new workout session with optional goal specification
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionCreate'
            examples:
              basic_session:
                summary: Basic session
                value:
                  startedAt: "2024-01-15T10:30:00Z"
              strength_session:
                summary: Strength training session
                value:
                  startedAt: "2024-01-15T10:30:00Z"
                  goal: "strength"
      responses:
        '201':
          description: Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
              examples:
                created_session:
                  summary: Created session response
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440000"
                    startedAt: "2024-01-15T10:30:00Z"
                    goal: "strength"
                    status: "active"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /sets:
    post:
      summary: Log a set (optionally with video URL)
      description: Logs an individual exercise set within a workout session
      tags:
        - Sets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCreate'
            examples:
              bodyweight_set:
                summary: Bodyweight exercise set
                value:
                  sessionId: "550e8400-e29b-41d4-a716-446655440000"
                  exerciseId: "pull_up_bw"
                  reps: 12
              weighted_set:
                summary: Weighted exercise set
                value:
                  sessionId: "550e8400-e29b-41d4-a716-446655440000"
                  exerciseId: "bench_press"
                  reps: 8
                  weightKg: 80.5
              video_set:
                summary: Set with video for analysis
                value:
                  sessionId: "550e8400-e29b-41d4-a716-446655440000"
                  exerciseId: "squat"
                  reps: 10
                  weightKg: 100
                  videoUrl: "https://videos.formfactor.app/user123/set456.mp4"
      responses:
        '201':
          description: Set logged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Set'
              examples:
                logged_set:
                  summary: Logged set response
                  value:
                    id: "660f9511-f39c-52e5-b827-557766551111"
                    sessionId: "550e8400-e29b-41d4-a716-446655440000"
                    exerciseId: "squat"
                    reps: 10
                    weightKg: 100
                    videoUrl: "https://videos.formfactor.app/user123/set456.mp4"
                    createdAt: "2024-01-15T10:45:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /form-analyses:
    post:
      summary: Request form analysis for a set
      description: Initiates AI-powered form analysis for an exercise set with optional pose data
      tags:
        - Form Analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormAnalysisCreate'
            examples:
              basic_analysis:
                summary: Basic analysis request
                value:
                  setId: "660f9511-f39c-52e5-b827-557766551111"
              analysis_with_frames:
                summary: Analysis with pose frames
                value:
                  setId: "660f9511-f39c-52e5-b827-557766551111"
                  frames:
                    - ts: 1000
                      keypoints:
                        - name: "left_elbow"
                          x: 0.45
                          y: 0.32
                          score: 0.95
                        - name: "right_elbow"
                          x: 0.55
                          y: 0.33
                          score: 0.92
      responses:
        '202':
          description: Analysis job accepted and queued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormAnalysisJob'
              examples:
                queued_job:
                  summary: Queued analysis job
                  value:
                    id: "770fa622-g4ad-63f6-c938-668877662222"
                    setId: "660f9511-f39c-52e5-b827-557766551111"
                    status: "queued"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /form-analyses/{jobId}:
    get:
      summary: Get analysis job status/result
      description: Retrieves the current status and results of a form analysis job
      tags:
        - Form Analysis
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier for the analysis job
          example: "770fa622-g4ad-63f6-c938-668877662222"
      responses:
        '200':
          description: Analysis job status and results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormAnalysisJob'
              examples:
                processing_job:
                  summary: Job in progress
                  value:
                    id: "770fa622-g4ad-63f6-c938-668877662222"
                    setId: "660f9511-f39c-52e5-b827-557766551111"
                    status: "processing"
                completed_job:
                  summary: Completed job with results
                  value:
                    id: "770fa622-g4ad-63f6-c938-668877662222"
                    setId: "660f9511-f39c-52e5-b827-557766551111"
                    status: "done"
                    cues:
                      - ts: 2500
                        level: "warn"
                        message: "Keep your back straight during the descent"
                      - ts: 4200
                        level: "info"
                        message: "Good depth on this rep"
                    metrics:
                      depth_score: 0.85
                      form_consistency: 0.78
                      tempo_rating: 0.92
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for user authentication

  schemas:
    SessionCreate:
      type: object
      required:
        - startedAt
      properties:
        startedAt:
          type: string
          format: date-time
          description: ISO 8601 timestamp when the session started
          example: "2024-01-15T10:30:00Z"
        goal:
          type: string
          enum: [hypertrophy, strength, endurance]
          description: Optional workout goal specification
          example: "strength"

    Session:
      type: object
      required:
        - id
        - startedAt
        - status
      properties:
        id:
          type: string
          format: uuid
          description: Unique session identifier
          example: "550e8400-e29b-41d4-a716-446655440000"
        startedAt:
          type: string
          format: date-time
          description: ISO 8601 timestamp when the session started
          example: "2024-01-15T10:30:00Z"
        endedAt:
          type: string
          format: date-time
          nullable: true
          description: ISO 8601 timestamp when the session ended
          example: "2024-01-15T11:45:00Z"
        status:
          type: string
          enum: [active, completed, canceled]
          description: Current session status
          example: "active"
        goal:
          type: string
          enum: [hypertrophy, strength, endurance]
          description: Workout goal specification
          example: "strength"

    SetCreate:
      type: object
      required:
        - sessionId
        - exerciseId
        - reps
      properties:
        sessionId:
          type: string
          format: uuid
          description: ID of the session this set belongs to
          example: "550e8400-e29b-41d4-a716-446655440000"
        exerciseId:
          type: string
          description: Identifier for the exercise type
          example: "pull_up_bw"
        reps:
          type: integer
          minimum: 1
          description: Number of repetitions performed
          example: 12
        weightKg:
          type: number
          nullable: true
          minimum: 0
          description: Weight used in kilograms
          example: 80.5
        videoUrl:
          type: string
          format: uri
          nullable: true
          description: URL to video recording of the set
          example: "https://videos.formfactor.app/user123/set456.mp4"

    Set:
      allOf:
        - $ref: '#/components/schemas/SetCreate'
        - type: object
          required:
            - id
            - createdAt
          properties:
            id:
              type: string
              format: uuid
              description: Unique set identifier
              example: "660f9511-f39c-52e5-b827-557766551111"
            createdAt:
              type: string
              format: date-time
              description: ISO 8601 timestamp when the set was logged
              example: "2024-01-15T10:45:00Z"

    PoseKeypoint:
      type: object
      required:
        - name
        - x
        - y
        - score
      properties:
        name:
          type: string
          description: Name of the body keypoint
          example: "left_elbow"
        x:
          type: number
          minimum: 0
          maximum: 1
          description: Normalized x coordinate (0-1)
          example: 0.45
        y:
          type: number
          minimum: 0
          maximum: 1
          description: Normalized y coordinate (0-1)
          example: 0.32
        score:
          type: number
          minimum: 0
          maximum: 1
          description: Confidence score for keypoint detection (0-1)
          example: 0.95

    PoseFrame:
      type: object
      required:
        - ts
        - keypoints
      properties:
        ts:
          type: number
          description: Timestamp in milliseconds within the video
          example: 1000
        keypoints:
          type: array
          items:
            $ref: '#/components/schemas/PoseKeypoint'
          description: Array of detected pose keypoints for this frame

    FormAnalysisCreate:
      type: object
      required:
        - setId
      properties:
        setId:
          type: string
          format: uuid
          description: ID of the set to analyze
          example: "660f9511-f39c-52e5-b827-557766551111"
        frames:
          type: array
          items:
            $ref: '#/components/schemas/PoseFrame'
          description: Optional pose frame data if available client-side
          nullable: true

    Cue:
      type: object
      required:
        - ts
        - level
        - message
      properties:
        ts:
          type: number
          description: Timestamp in milliseconds within the video
          example: 2500
        level:
          type: string
          enum: [info, warn, critical]
          description: Severity level of the form cue
          example: "warn"
        message:
          type: string
          description: Human-readable form feedback message
          example: "Keep your back straight during the descent"

    FormAnalysisJob:
      type: object
      required:
        - id
        - setId
        - status
      properties:
        id:
          type: string
          format: uuid
          description: Unique job identifier
          example: "770fa622-g4ad-63f6-c938-668877662222"
        setId:
          type: string
          format: uuid
          description: ID of the set being analyzed
          example: "660f9511-f39c-52e5-b827-557766551111"
        status:
          type: string
          enum: [queued, processing, done, failed]
          description: Current job processing status
          example: "processing"
        cues:
          type: array
          items:
            $ref: '#/components/schemas/Cue'
          nullable: true
          description: Form feedback cues (available when status is 'done')
        metrics:
          type: object
          additionalProperties:
            type: number
          nullable: true
          description: Quantitative performance metrics
          example:
            depth_score: 0.85
            form_consistency: 0.78
            tempo_rating: 0.92

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Machine-readable error code
              example: "VALIDATION_ERROR"
            message:
              type: string
              description: Human-readable error message
              example: "The provided session ID is invalid"
            details:
              type: object
              additionalProperties: true
              description: Additional error context
              example:
                field: "sessionId"
                value: "invalid-uuid"

  responses:
    BadRequest:
      description: Bad request - invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            validation_error:
              summary: Validation error
              value:
                error:
                  code: "VALIDATION_ERROR"
                  message: "The provided session ID is invalid"
                  details:
                    field: "sessionId"
                    value: "invalid-uuid"

    Unauthorized:
      description: Unauthorized - authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            auth_required:
              summary: Authentication required
              value:
                error:
                  code: "AUTHENTICATION_REQUIRED"
                  message: "Valid authentication token is required"

    NotFound:
      description: Not found - resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            resource_not_found:
              summary: Resource not found
              value:
                error:
                  code: "RESOURCE_NOT_FOUND"
                  message: "The requested resource was not found"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            server_error:
              summary: Server error
              value:
                error:
                  code: "INTERNAL_SERVER_ERROR"
                  message: "An unexpected error occurred"

tags:
  - name: Sessions
    description: Workout session management
  - name: Sets
    description: Exercise set logging and tracking
  - name: Form Analysis
    description: AI-powered form analysis and feedback